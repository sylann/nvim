snippet vif
	<${2:template} v-if="${1:condition}">
		${3:content}
	</$2>$0

snippet vfor
	<${4:template} v-for="${2:item} in ${1:iterable}" :key="${3:item.id}">
		${5:content}
	</$4>$0

snippet slotuse
	<template #${1:name}></template>

snippet slotdef
	<slot name="${1:name}"></slot>

snippet com
	<!-- ${1:TODO: }$0 -->

snippet transition
	<transition name="${1:fade}">
		${0:content}
	</transition>

snippet defprops
	const props = defineProps<{
		${1:modelValue}: ${2:string}
	}>()$0

snippet defemits
	const emit = defineEmits<{
		(event: "${1:modelValue}", value: ${2:string}): ${3:void}
		(event: "${4:click}"): ${5:void}
	}>()$0

snippet ref
	const ${1:varname} = ref<${2:type}>(${3:default})$0

snippet reactive
	const ${1:varname} = reactive<${2:type}>({$0})

snippet computed
	const ${1:varname} = computed<${2:type}>(() => {${3:/* do something */}})$0

snippet watch
	watch(${1:ref}, () => {${2:/* do something */}})$0

snippet watchimed
	watch(${1:ref}, () => {${2:/* do something */}}, { immediate: true })$0

snippet vuescript
	<script setup lang="ts">
	  ${1:Script}
	</script>

	<template>
	  ${2:Html}
	</template>

snippet vuetemplate
	<template>
	  ${1:Html}
	</template>

	<script setup lang="ts">
	  ${2:Script}
	</script>

snippet impcomponent
	import ${1:ComponentName} from "@/components/${2:path/to/}$1.vue"$0

snippet usestore
	const ${2:n}Store = useStore${1:Name}()$0

snippet selectvm
	<select v-model="${1:vm}">
	  <option :value="${5:zeroValue}">${6:Select an option}</option>
	  <option v-for="opt in ${2:options}" :key="opt.id" :value="${3:opt.id}">{{ ${4:opt.label} }}</option>
	</select>
